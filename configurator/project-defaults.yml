- job-template:
    name: '{ci_project}-{name}'
    description: |
        Managed by Jenkins Job Builder, do not edit manually!
    node: "{ci_project}"
    scm:
        - git:
            url: "{git_url}"
            skip-tag: True
    triggers:
        - pollscm: "H/10 * * * *" 
    builders:
        - python: |
            # This script uses the Duffy node management api to get fresh machines to run
            # your CI tests on. Once allocated you will be able to ssh into that machine
            # as the root user and setup the environ
            #
            # XXX: You need to add your own api key below, and also set the right cmd= line 
            #      needed to run the tests
            #
            # Please note, this is a basic script, there is no error handling and there are
            # no real tests for any exceptions. Patches welcome!

            import json, urllib, subprocess, sys

            url_base = "http://admin.ci.centos.org:8080"
            api = "{duffy_key}"
            ver = "{centos_ver}"
            arch = "{centos_arch}"
            count = 1
            git_url = "{git_url}"
            image_name = "{namespace}/{image_name}"
            image_version = "{image_version}"
            image_tag = "%s:%s" % (image_name, image_version)

            get_nodes_url="%s/Node/get?key=%s&ver=%s&arch=%s&i_count=%s" % (url_base,api,ver,arch,count)

            dat=urllib.urlopen(get_nodes_url).read()
            b=json.loads(dat)
            for h in b['hosts']:
                cmd=(
                    "ssh -t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@%(host)s '"
                    "yum -y install git docker && "
                    "service docker start && "
                    "git clone %(git_url)s tests && cd tests && "
                    "docker build -t %(image_name)s . && "
                    "docker tag -f %(image_name)s %(image_name)s"
                    "'"
                ) % {'host': h, 'git_url': git_url, 'image_name': image_name}

              print cmd
              rtn_code=subprocess.call(cmd, shell=True)
            
            done_nodes_url="%s/Node/done?key=%s&ssid=%s" % (url_base, api, b['ssid'])
            das=urllib.urlopen(done_nodes_url).read()

            sys.exit(rtn_code)

- job-group:
    name: ci.centos.org-rundotsh-job
    jobs:
        - '{ci_project}-{name}'
